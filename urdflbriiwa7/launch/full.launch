<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find urdflbriiwa7)/urdf/urdflbriiwa7.urdf"/>
  <arg name="position" default="false"/>
  <arg name="torque" default="false"/>
  <arg name="rvizconfig" default="$(find urdflbriiwa7)/rviz/urdf.rviz" />
 

<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

 <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find urdflbriiwa7)/config/urdflbriiwa7_control.yaml" command="load"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 0.0 -urdf -model urdflbriiwa7 -param robot_description" respawn="false" output="screen" />
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <remap from="/joint_states" to="/urdflbriiwa7/joint_states" />
  </node>

 <!-- load the controllers -->
<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/urdflbriiwa7" args=" URDFLBRiiwa7Joint1_torque_controller  URDFLBRiiwa7Joint2_torque_controller  URDFLBRiiwaJoint3_torque_controller  URDFLBRiiwaJoint4_torque_controller  URDFLBRiiwaJoint5_torque_controller  URDFLBRiiwaJoint6_torque_controller  URDFLBRiiwaJoint7_torque_controller  joint_state_controller"/>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

</launch>
